[TOC]

# App Metadata

üìç
- @MySQL : well known at chair
- @las2peer : authentication handling, developed by chair

OIDC authentication with @las2peer, [example](https://github.com/rwth-acis/RequirementsBazaar/blob/7a2c97be8d1176cdcf8d33a42c30b78ad8860655/etc/i5.las2peer.webConnector.WebConnector.properties) from @RequirementsBazaar or [example](https://github.com/rwth-acis/las2peer-FileService/blob/master/etc/i5.las2peer.webConnector.WebConnector.properties) from @FileService

## App

Semantic versioning as defined at <http://semver.org> is supported.

### Data Scheme

| @LAPPS
| {app} |
  - size, download_url, source_url, support_url, name, version, platform, supported_platform, license, description_short, description_long
  - rating
  - c_date, m_date
  - author, artifacts, tags, comments
  - {comment} ‚Üí content, rating, c_date, m_date
  - {artifact} ‚Üí type, url, description
  - {tag} ‚Üí value
| {user} |
  - oidc_id, email, username, description, website
  - role, date_registered

| @LAPPS > PLEASE
| {user} |
  - oidc_id, username
| {app} |
  - creator
  - description
  - search_text (auto)
  - platform (auto)
  - autobuild
  - version
  - {comment} ‚Üí creator, date, text
  - {rating} ‚Üí creator, value
  - {media} ‚Üí name, type, blob
  - {maintainer}
  - {buildhook} (auto)‚Üí trigger ‚àä (release, commit), url, change ‚àä (sync (release only), none, commit), target_app, prefixes
| {deployhook} |
  - triggers = {build | commit | patch | minor | major};*
  - target_iid

Configuration is necessary per version, as older builds must work for older deployments as well as new deployments with an old version. For less complexity it shall be included in one version field.
Buildhooks are inferred from autobuild field.

### Configuration

option: import from git repo

| autobuild
| * | `trigger` ‚àä

  |`commit`|`release`
  |triggered for every push event|triggered for every push event on a tagged branch
| | https git repo `url`
| | `change` ‚àä

  |`none`|`commit`|`sync`
  |no new version, only build triggered
   |
    version is incremented by its prerelease identifier, also increasing patch (or minor or major) number where necessary to follow <http://semver.org>

    ```
    'https://github.com/example/repo': {sha: '4684adf'}
    ```

    added to version's `env` field
   |(release only) version is named same as the git tag

    ```
    'https://github.com/example/repo': {
      sha: '4684adf',
      tag: 'v1.0.1'
    }
    ```

    added to version's `env` field
| | `prefixes`, label before major number, e.g. "v" for "v0.1"
| * |```
  trigger: "commit",
  url: "https://github.com/adabru/GitTraining",
  change: "none",
  prefixes: ["latest"]
  ```

| version, e.g. v0.1
| env || environment variables
| |```json
  s1: "https://github.com/adabru/PLEASE-sample",
  s2: "https://github.com/rwth-acis/las2peer-Template-Project"
  ```
| build |
  - custom environment (container)
    - prefabricated e.g. @maven
    - full build shell command
      - templates, e.g copy
      - include tests
    - full build + increment command
  - OR dockerfile
    - ‚úò many commits
    - ‚úî terser in some cases
    - ‚úî bundled configuration
    - ‚úò extensions break standard
| |
  ```json
  base: "node_git",
  full: "sh -c \"git clone $s1 && ./${s1##*/}/build.sh ;
    git clone ${s2##*/} && ./${s2##*/}/build.sh\""
  ```

  or

  ```
  base: "node",
  full: "git clone $source && npm install && webpack",
  inc: "git pull && webpack"
  ```
| deploy |
  - default deployment
  - download {fileset target_platform}
  - download container as ‚Ü§`.tar`‚≠≤ (see [here](https://www.packer.io/docs/builders/docker.html#export_path))‚≠∞‚Ü¶
  - deploy to ROLE space
  - deploy as web service
    - custom environment (container)
      - prefabricated @las2peer, ROLE widget wrapper
      - OR commited build container
        - ‚úî save space
        - ‚úî less complex
        - ‚úò build environment may interfere
    - start.sh (multiple processes with `...&`)
    - logging
    - open ports for ROLE space
    - open ports for public
    - (port redirects)
  - latest build
| |
  ```
  service: {
    base: "build",
    command: "lsc server.ls",
    backup_files: ["./doc"]
  }
  ```

  or

  ```
  "windows 8": ["~/win/[^/]*\.zip", "~/win/[^/]*\.gzip"],
  "windows 10": ["~/win/[^/]*\.zip", "~/win/[^/]*\.gzip"],
  "linux": "~/linux/[^/]*\.tar"
  ```
| statefulFiles |
  - files for backup
  - files for ROLE space upload
    - description for deciding whether to upload
  - files for survive update

Preceding versions' configuration is merged into successor versions.

---

### build & deploy scenarios

- incremental build yes, incremental deploy no
- containers/images are physically stored differentially

--

### scenario 1

- build with base + sh
- deploy with host sh/java script

  ```
  cid=$(docker run -d deploy_base)
  for (f in export_files)
    cp f ‚Ä¶/$cid/root
  ```

- `‚úî` incremental build available
- `‚úî` custom run environment
- `‚Ä¢` fast copying

--

### scenario 2 ‚úî

- build with base + sh
- deploy with base build_container

- `‚úî` incremental build available
- `‚úò` no custom run environment
- `‚úî` no copying
- `‚úî` app full-fledged docker image (but possibly containing build dependencies)

--

### scenario 3 ‚úî

- build with base + sh
- deploy with dynamic dockerfile

  ```
  ADD ‚Ä¶build_cid‚Ä¶ /
  ‚Ä¶
  docker build
  ```

- `‚úî` incremental build available
- `‚úî` custom run environment
- `‚Ä¢` fast copying
- `‚úî` app full-fledged docker image
- `‚Ä¢` dockerfile limitations

--

###scenario 4 ‚úî

- build defined as dockerfile, deployment base from build container:

  ```
  # build
  docker build build_dockerfile
  # deploy
  docker run result
  ```

- `‚úò` incremental build limited to dockerfile
- `‚úò` no custom run environment
- `‚úî` no copying
- `‚úî` app full-fledged docker image

---

### Bundle

- composite
- links to internal/frozen apps = appid + version [+ statefulFiles ‚Üí new container]
  - only accessible from containing bundle
  - updatable from space and from bundle

## Interface

| path | method | body | return
/search?q=blabla | GET | |
  ```
  [{
    app: 7,
    description: "‚Ä¶‚Ä¶",
    rating: 2.41
  },{
    app: 14,
    ‚Ä¶‚Ä¶
  }]
  ```
/platform | GET | |
  ```
  ["windows 8", "Linux", ‚Ä¶‚Ä¶]`
  ```
/platform/{all,p}?page=2 | GET | |
  ```
  [{
    app: 7,
    description: "‚Ä¶‚Ä¶",
    rating: 2.41,
  },{
    app: 14,
    ‚Ä¶‚Ä¶
  }]
  ```
/apps/id | GET | |
  ```
  {
    creator: "user1",
    description: "#Best App!\n‚Ä¶‚Ä¶",
    autobuild: "[‚Ä¶‚Ä¶]",
    version: "{‚Ä¶‚Ä¶}",
    rating: 3.54,
    platforms: ["Windows", "Linux"]
  }
  ```
/apps/id | PUT | json |
/apps/id | DELETE | |
/apps/id/maintainers | POST | string |
/apps | POST |
  ```
  {
    description: "blabla",
    version: {},
    autobuild: []
  }
  ```
 |
  ```
  {app: 7}
  ```
/apps/id/comments | GET | |
  ```
  [{
    creator: "user1",
    timestamp: 1564984,
    text: "I like it"
  },{
    creator: "user2",
    timestamp: 1786545,
    text: "I do not like it"
  }]
  ```
/apps/id/comments | POST | raw text | |
/apps/id/comments/timestamp | DELETE | | |
/apps/id/media/name | GET | | binary
/apps/id/media/name | POST | binary | |
/apps/id/rating | POST | [1-5] | |
/hook | POST | json | github or service runner
/hook/{iid} | PUT |
  ```
  { triggers: "build;major" }
  ```
 | register hook for deployment
